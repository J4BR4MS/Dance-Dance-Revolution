import javax.swing.*;
import java.awt.*;

public class FallingNote {

    final private int WINDOW_WIDTH = 1000;

    final private DDRViewer window;
    private Image image;

    private int x;
    private int y = 0;
    private int dy = 20;

    final private int height = 50;
    final private int width = 50;

    final private int direction;

    public FallingNote(int direction, int y, DDRViewer window){
        this.direction = direction;
        setDirection(direction);
        this.y = -y;
        this.window = window;
    }

    public void setDirection(int direction){
        // Create the image and location of each falling note depending on its direction

        // If this is an up note
        if(direction == 0){
            // 25 (half width of note) - 112 (width of button)
            x = WINDOW_WIDTH/2 - 87;
            ImageIcon upNote = new ImageIcon("Resources/upNote.png");
            image = upNote.getImage();
        }
        // If this is a down note
        if(direction == 1){
            // 25 (half width of note)
            x = WINDOW_WIDTH/2 + 25;
            ImageIcon downNote = new ImageIcon("Resources/downNote.png");
            image = downNote.getImage();
        }
        // If this is a right note
        if(direction == 2){
            // // 112 (width of button) + 25 (half width of note)
            x = WINDOW_WIDTH/2 + 137;
            ImageIcon rightNote = new ImageIcon("Resources/rightNote.png");
            image = rightNote.getImage();
        }
        // If this is a left note
        if(direction == 3){
            // 112 (width of button) + 61 (half the width of button) + 25 (half width of note)
            x = WINDOW_WIDTH/2 - 195;
            ImageIcon leftNote = new ImageIcon("Resources/leftNote.png");
            image  = leftNote.getImage();
        }
    }
    public void move() {
        // If the note has not collided with the button, or reached the limit of when the user can press it
        if(!checkCollision()){
            y = y + dy;
        }
    }

    public void draw(Graphics g){
        g.drawImage(image, x, y, width, height, window);
    }

    public void scored(){
        // If the note is conquered, send it way out yonder
        y = -100000;
        // Play the rewarding point sound
        window.getGame().playSound("Resources/point.wav");
    }

    public boolean checkCollision() {
        // If the note is within the range of a button
        for(int i = 0; i < 40; i++) {
            if (y == window.getButtonY() - width + i) {
                // This note has failed to be conquered, so change the front note
                window.getGame().changeFrontNote(this);
                return true;
            }
        }
            return false;
    }

    public int getX(){
        return x;
    }
    public int getY(){
        return y;
    }

    public int getDirection(){
        return direction;
    }

    public void increaseDY(int streak){
        // Increase the speed once the streak reaches a multiple of 10
        dy += 10 * (int) (streak / 10);
    }
}
