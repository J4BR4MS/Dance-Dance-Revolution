import java.awt.*;

public class Score {

    final private DDRViewer window;

    final private double POINT = 500;
    final private int STREAK_CHECKPOINT_1 = 10;
    final private int STREAK_CHECKPOINT_2 = 20;
    final private int MULTIPLIER1 = 2;
    final private int MULTIPLIER2 = 5;

    private int currentScore;
    private double multiplier = 1;
    private int streak;
    private int incorrectStreak;

    private boolean alreadyPlayed;
    private boolean alreadyPlayed2;
    private boolean alreadyIncreasedSpeed;
    private boolean alreadyIncreasedSpeed2;

    public Score(DDRViewer window){
        this.window = window;
        alreadyPlayed = false;
        alreadyPlayed2 = false;
        streak = 0;
        incorrectStreak = 10;
        alreadyIncreasedSpeed = false;
        alreadyIncreasedSpeed2 = false;
    }

    public void draw(Graphics g){
        // Draw statistics
        g.setColor(Color.LIGHT_GRAY);
        g.drawString("\tSCORE:" + currentScore, 60, 155);
        g.drawString("\tSTREAK:", 60, 195);
        g.drawString("\tMISTAKES LEFT", 75, 215);

        // Make the actual statistics a different color
        // Streak is in green
        g.setColor(Color.GREEN);
        g.drawString(streak + "", 115, 195);

        // Mistakes left is in red
        g.setColor(Color.RED);
        g.drawString( incorrectStreak + "", 60, 215);

        // If a certain multiplier exists, illustrate a colorful bonus for the user to see
        if(multiplier == MULTIPLIER1){
            g.setColor(Color.GREEN);
            g.drawString("\t2x BONUS!", 60, 135);

            // Make sure this only happens once, since this method is called repeatedly
            if(!alreadyPlayed){
                window.getGame().playSound("Resources/bonus.wav");
                alreadyPlayed = true;
            }
        }
        // Same but for a greater multiplier
        else if(multiplier == MULTIPLIER2){
            g.setColor(Color.YELLOW);
            g.drawString("\t5x BONUS!", 60, 135);
            if(!alreadyPlayed2){
                window.getGame().playSound("Resources/secondBonus.wav");
                alreadyPlayed2 = true;
            }
        }
    }


    public void addPoint(){
        // Add a point influenced by the bonus multiplier
        currentScore += POINT * multiplier;
    }
    public void subtractPoint(){
        currentScore -= 500;
    }

    public void streak(boolean alive){
        // If the streak is alive, add to the streak variable
        if(alive){
            streak++;
        }
        // Reset the streak, increase the mistakes
        else{
            streak = 0;
            incorrectStreak--;
            // If there are enough mistakes, end the game
            if(incorrectStreak == 0){
                window.lostGameScreen();
            }
            subtractPoint();
        }
    }
    public void bonus(){
        // If the streak is too small, make sure the multiplier is 1, as the point will be influenced by it.
        // This means the multiplier cannot be 0 or else there will be no points added.
        if(streak < STREAK_CHECKPOINT_1){
            multiplier = 1;
        }
        // If the streak is large enough to qualify for the first bonus, increase the multiplier and speed
        if(streak >= STREAK_CHECKPOINT_1 && streak < STREAK_CHECKPOINT_2){
            multiplier = MULTIPLIER1;
            if(!alreadyIncreasedSpeed) {
                window.incSpeed(streak);
                alreadyIncreasedSpeed = true;
            }
        }
        // Same but for the second bonus
        if(streak >= STREAK_CHECKPOINT_2){
            multiplier = MULTIPLIER2;
            if(!alreadyIncreasedSpeed2){
                window.incSpeed(streak);
                alreadyIncreasedSpeed2 = true;
            }
        }
    }

    public void updateScore(){
        window.repaint();
    }
}
